version = '0.1-SNAPSHOT'

mainClassName = "earay.base.EarayApplication"

List dropwizard = [
  "io.dropwizard:dropwizard-core:${versions.dropwizard}",
  "io.dropwizard:dropwizard-hibernate:${versions.dropwizard}",
  "io.dropwizard:dropwizard-client:${versions.dropwizard}",
  "io.dropwizard:dropwizard-migrations:${versions.dropwizard}",
  "io.dropwizard:dropwizard-assets:${versions.dropwizard}",
//  "io.dropwizard:dropwizard-forms:${versions.dropwizard}",
  "io.dropwizard:dropwizard-auth:${versions.dropwizard}"
]

dependencies {
  compile dropwizard
  compile ("com.wordnik:swagger-jaxrs_2.10:1.3.10") {
//  compile ("com.wordnik:swagger-jersey-jaxrs_2.10:1.3.10") {
    exclude group: 'org.javassist', module: 'javassist'
    exclude group: 'javax.ws.rs', module: 'jsr311-api'
  }
  compile 'com.sun.jersey.contribs:jersey-multipart:1.18.3'
  compile 'org.projectlombok:lombok:1.14.8'
  compile 'org.slf4j:slf4j-api:1.7.7'
  compile 'com.google.inject:guice:3.0'
  compile "com.mysema.querydsl:querydsl-jpa:${versions.querydsl}"
  compile "com.h2database:h2:1.4.182"
  compile "org.postgresql:postgresql:9.3-1102-jdbc41"
  compile "com.yammer.dropwizard:dropwizard-auth-ldap:0.1.2"
  compile ("org.reflections:reflections:0.9.9") {
    exclude group: 'org.javassist', module: 'javassist'
    exclude group: 'org.slf4j', module: 'slf4j-api'
  }
  compile "com.jcraft:jsch:0.1.51"
  compile "net.sf.expectit:expectit-core:0.6.0"
  compile "org.codehaus.groovy:groovy:2.3.7"
  if (project.hasProperty('apps')) {
    project.property('apps').split(',').each() {entry ->
      project(":${entry}").configurations.compile.dependencies.all {
        compile it
      }
      project(":${entry}").subprojects.each() {subpj ->
        subpj.configurations.compile.dependencies.all {
          compile it
        }
      }
    }
  }
}

if (project.hasProperty('apps')) {
  project.property('apps').split(',').each() {entry ->
    project(":${entry}").sourceSets.all {sourceset ->
      sourceSets["${sourceset.name}"].java.srcDirs += sourceset.java.srcDirs
      sourceSets["${sourceset.name}"].resources.srcDirs += sourceset.resources.srcDirs
    }
    project(":${entry}").subprojects.each() {subpj ->
      subpj.sourceSets.all {sourceset ->
        sourceSets["${sourceset.name}"].java.srcDirs += sourceset.java.srcDirs
        sourceSets["${sourceset.name}"].resources.srcDirs += sourceset.resources.srcDirs
      }
    }
  }
}

